<!DOCTYPE html>
<meta charset="utf-8">
<html>
<head>
  <title>Google Analytics (<%= settings.frequency.capitalize %>)</title>
<% 
=begin %>   
  <script src="../../js/d3.min.js"></script>
  <script src="../../js/rickshaw.min.js"></script>
<% 
=end %>
  <script src="../../js/d3.v3.min.js"></script>
  <style type="text/css">
    body {
      background: #fff;
      color: #000;
      width: 384px;
      padding: 0;
      margin: 0;
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 360px;
      height: 180px;
    }
    .line {
      fill: none;
      stroke: black;
      stroke-width: 2px;
    }
  </style>
  <script>
    window.onload = function() {
      // Overall width/height available.
      var outer_width = 360;
      var outer_height = 180;

      // Area around the actual chart (space for axes numbers etc).
      var margin = {top: 0, right: 0, bottom: 0, left: 0};

      // Area of the chart itself (not including space for axes numbers).
      var inner_width = outer_width - margin.left - margin.right;
      var inner_height = outer_height - margin.top - margin.bottom;

      <% if settings.frequency == 'daily' %>
        var parseDate = d3.time.format("%Y%m%d %H%M").parse;
      <% else %>
        var parseDate = d3.time.format("%Y%m%d").parse;
      <% end %>

      // The scales.
      var x = d3.time.scale()
          .range([0, inner_width]);

      var y = d3.scale.linear()
          .range([inner_height, 0]);

      var line = d3.svg.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y(d.visits); });

      <% @profiles_data.each_with_index do |p, idx| %>

        // The main chart area.
        var svg = d3.select('#chart-<%= idx %>').append('svg')
            .attr('width', outer_width)
            .attr('height', outer_height)
          .append('g')
            .attr('transform',
                            'translate(' + margin.left + ',' + margin.top + ')');

        var data = [];

        <% p[:periods][1][:visits].each do |v| %>
          data.push({
            date: "<%= v.date %><% if settings.frequency == 'daily' %> <%= v.hour %>00<% end %>",
            visits: <%= v.visits %>
          });
        <% end %>
        console.log(data);

        data.forEach(function(d) {
          d.date = parseDate(d.date);
          d.visits = +d.visits;
        });

        x.domain(d3.extent(data, function(d) { return d.date; }));
        y.domain(d3.extent(data, function(d) { return d.visits; }));

        svg.append('path')
          .datum(data)
          .attr('class', 'line')
          .attr('d', line);
      <% end %>
    };

<% 
=begin %>
  window.onload = function() {
    <% @profiles_data.each_with_index do |p, idx| %>
      var graph = new Rickshaw.Graph({
        element: document.querySelector("#chart-<%= idx %>"),
        width: 350,
        height: 100,
        renderer: 'line',
        series: [{
          data: [ 
            <% p[:periods][1][:visits].each_with_index do |v, col| %>
              { x: <%= col %>, y: <%= v.visits %> },
            <% end %>
            ],
            color: '#999999'
        },{
          data: [ 
            <% p[:periods][0][:visits].each_with_index do |v, col| %>
              { x: <%= col %>, y: <%= v.visits %> },
            <% end %>
            ],
            color: '#000000'
        }]
      });
      graph.render();
    <% end %>
  };
<% 
=end %>

  </script>

</head>
<body>
  <h1>Google Analytics (<%= settings.frequency.capitalize %>)</h1>

  <% @profiles_data.each_with_index do |p, idx| %>
    <h2><%= p[:name] %></h2>

    <% if p[:periods][0][:start_date] == p[:periods][0][:end_date] %>
      <p>For <%= p[:periods][0][:start_date] %>.</p>
    <% else %>
      <p>From <%= p[:periods][0][:start_date] %> to <%= p[:periods][0][:end_date] %>.</p>
    <% end %>

    <h3>Visits</h3>

    <div id="chart-<%= idx %>" class="chart"></div>

<% 
=begin %>
    <h4><% if settings.frequency == 'weekly' %>Last week<% else %>Yesterday<% end %></h4>
    <ul>
      <% p[:periods][0][:visits].each do |v| %>
        <li><%= v.date %><% if settings.frequency == 'daily' %> <%= v.hour %>:00<% end %> – <%= v.visits %></li>
      <% end %> 
    </ul>

    <h4>Previous</h4>
    <ul>
      <% p[:periods][1][:visits].each do |v| %>
        <li><%= v.date %><% if settings.frequency == 'daily' %> <%= v.hour %>:00<% end %> – <%= v.visits %></li>
      <% end %> 
    </ul>
<% 
=end %>

    <h3>Totals</h2>
    <p>Visits: 
      <% if p[:periods][0][:total_visits] > p[:periods][1][:total_visits] %>
      ^
      <% elsif p[:periods][0][:total_visits] < p[:periods][1][:total_visits] %>
      v
      <% else %>
      –
      <% end %>
      <%= p[:periods][0][:total_visits] %> (<%= p[:periods][1][:total_visits] %>)</p>
    <p>Visitors: 
      <% if p[:periods][0][:total_visitors] > p[:periods][1][:total_visitors] %>
      ^
      <% elsif p[:periods][0][:total_visitors] < p[:periods][1][:total_visitors] %>
      v
      <% else %>
      –
      <% end %>
      <%= p[:periods][0][:total_visitors] %> (<%= p[:periods][1][:total_visitors] %>)</p>
    <p>Pageviews:
      <% if p[:periods][0][:total_pageviews] > p[:periods][1][:total_pageviews] %>
      ^
      <% elsif p[:periods][0][:total_pageviews] < p[:periods][1][:total_pageviews] %>
      v
      <% else %>
      –
      <% end %>
      <%= p[:periods][0][:total_pageviews] %> (<%= p[:periods][1][:total_pageviews] %>)</p>
  <% end %>



</body>
</html>
